{"componentChunkName":"component---src-templates-blog-post-js","path":"/webpack/","result":{"data":{"site":{"siteMetadata":{"title":"Tony's Blog"}},"markdownRemark":{"id":"ac1d27e8-2168-50be-a37e-cd8a89ea48d7","excerpt":"…","html":"<h2>웹팩이란?</h2>\n<p>웹팩은 모든 파일들을 모듈이라 부릅니다. 그리고 이러한 모듈들을 하나의 파일로 묶어주는 것을 <strong>번들</strong>이라 합니다.</p>\n<p>각 모듈들은 복잡한 의존 관계로 얽혀있을 수 있는데 웹팩은 이러한 모듈들의 의존성을 유지하며 안전하게 하나의 파일로 번들링 해줍니다.</p>\n<p>이렇게 번들링된 파일이 클라이언트에게 전송되는 것이죠.</p>\n<h2>웹팩의 기본구조</h2>\n<p><strong>4가지 주요 속성</strong></p>\n<ul>\n<li>\n<p>Entry : 모듈간의 의존 관계를 이해하기 위한 시작점이 되는 자바스크립트 파일 경로.(index.js의 위치) 웹팩은 Entry point를 시작으로 모듈 간의 의존 관계를 따라 그려지는 Dependency Graph를 분석하고 번들링해준다.</p>\n<blockquote>\n<p>Entry point는 2개 이상이 될 수도 있다.</p>\n</blockquote>\n</li>\n<li>Output : 웹팩이 번들링하여 생성한 최종 번들 파일의 경로.</li>\n<li>\n<p>Loader : 웹팩이 자바스크립트 파일이 아닌 웹 자원(HTML, CSS, Images, 폰트 등)들을 해석/변환 등의 처리를 할 수 있게 도와줌.</p>\n<blockquote>\n<p>배열 안에 정의된 Loader는 오른쪽에서 왼쪽 순으로 적용된다.</p>\n</blockquote>\n</li>\n<li>Plugin : 웹팩의 기본적인 동작에 추가적인 기능을 제공하는 속성. 빌드한 결과물의 형태를 바꾸는 역할.</li>\n</ul>\n<p>아래는 webpack.config.js의 간단한 예시입니다.</p>\n<p><strong>기타 속성</strong></p>\n<ul>\n<li>mode: none, development, production 세 가지 모드가 있다. development 모드 시 개발에 유용한 기능을 제공하고 production 모드 시 성능 최적화를 돕는 파일 압축 등의 빌드 과정을 추가해준다.</li>\n<li>devServer : 웹팩으로 빌드한 결과물을 메모리에 올려서 보여주기 때문에 명령어 입력 없이 코드를 변경 후 저장하면 빠르게 변경사항을 반영하여 개발 할 수 있게 도와준다.</li>\n<li>devtool : 웹팩 이용에 도움을 주는 개발 도구</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"path\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> webpack <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'webpack'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> HtmlWebpackPlugin <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html-webpack-plugin'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">'development'</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./app.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"bundle.js\"</span><span class=\"token punctuation\">,</span>\n    path<span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">\"./dist\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.scss$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"css-loader\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"sass-loader\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.ts$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token string\">\"ts-loader\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">HtmlWebpackPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">webpack<span class=\"token punctuation\">.</span>ProgressPlugin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  devServer<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">3000</span><span class=\"token punctuation\">,</span>\n    hot<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n    proxy<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token string\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        target<span class=\"token operator\">:</span> <span class=\"token string\">'https://example.com'</span><span class=\"token punctuation\">,</span>\n        changeOrigin<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  devtool<span class=\"token operator\">:</span> <span class=\"token string\">'cheap-eval-source-map'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h2>간단한 사용법</h2>\n<p>아주 간단한 사용법을 알아볼까요?</p>\n<p>웹팩을 사용하기 위해서는 webpack와 webpack-cli를 설치해야합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"><span class=\"token function\">yarn</span> <span class=\"token function\">add</span> -D webpack webpack-cli</code></pre></div>\n<p>아주 간단한 두 개의 모듈을 준비해볼까요?</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// index.js</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> helloWorld <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"./log\"</span>\n\n<span class=\"token function\">helloWorld</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// log.js</span>\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">helloWorld</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"hello world\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>index.js가 log.js를 의존하고 있는 모습입니다.</p>\n<p>웹팩 4.0 버전부터 zero config를 지원하는데 루트 폴더아래 src와 dist 폴더를 생성하고 번들링할 모듈들을 src폴더에 집어 넣은 후, 아래의 명령어를 실행합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">npx webpack</code></pre></div>\n<blockquote>\n<p>npx는 node_modules/.bin 폴더 아래 있는 실행파일들을 실행시키는 명령어다.</p>\n</blockquote>\n<p>웹팩이 알아서 빌드를 수행해준 후, ./dist 폴더 아래에 main.js가 생성된 것을 확인 할 수 있습니다.</p>\n<p>아래와 같이 main.js를 실행시켜보면 ‘hello world’가 잘 출력되는 것을 확인 할 수 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">node ./dist/main.js</code></pre></div>","frontmatter":{"title":"WEBPACK 정리","date":"May 06, 2021","description":"웹팩에 대한 내용들을 정리했습니다."}},"previous":{"fields":{"slug":"/자바스크립트-비동기/"},"frontmatter":{"title":"자바스크립트의 비동기"}},"next":null},"pageContext":{"id":"ac1d27e8-2168-50be-a37e-cd8a89ea48d7","previousPostId":"e0dc752a-ccf1-5e68-bfe1-f9076ccdd2ba","nextPostId":null}},"staticQueryHashes":["2841359383","3257411868"]}