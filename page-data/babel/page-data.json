{"componentChunkName":"component---src-templates-blog-post-js","path":"/babel/","result":{"data":{"site":{"siteMetadata":{"title":"Tony's Blog"}},"markdownRemark":{"id":"38695025-1aa9-59a4-84c1-527f33db89ff","excerpt":"Babel이란? Babel은 ECMAScript 2015+(ES6+) 이상 버전의 Javascript 코드를 인터넷 익스플로러 같은 이전 버전의 Javascript 엔진에서 실행 가능한 이전 버전의 Javascript 코드로 변환해주는 Javascript…","html":"<h2>Babel이란?</h2>\n<p>Babel은 ECMAScript 2015+(ES6+) 이상 버전의 Javascript 코드를 인터넷 익스플로러 같은 이전 버전의 Javascript 엔진에서 실행 가능한 이전 버전의 Javascript 코드로 변환해주는 Javascript 트랜스 컴파일러 입니다. 이를 통해 Javascript 코드의 크로스 브라우징을 효과를 얻을 수 있습니다.</p>\n<p><em>예시 -</em> 신버전의 JS -> 구번의 JS, Typescript -> JS, Jsx -> JS</p>\n<h2>Babel의 기본구조</h2>\n<p>바벨을 이용한 트랜스 컴파일은 Parsing(파싱), Transforming(변환), Printing(출력)의 세 가지 과정을 거칩니다.</p>\n<h4>Parsing</h4>\n<p>바벨은 입력된 자바스크립트 코드를 파싱하여, 컴파일 작업에 적합한 자료구조인 추상구문트리(AST)를 생성합니다.</p>\n<h4>Transforming</h4>\n<p>바벨이 생성한 추상구문트리를 가지고 플러그인(Plugin)과 플러그인의 집합인 프리셋(Preset)으로 transpile, polyfill 등의 작업을 합니다.</p>\n<blockquote>\n<p>ex) const -> var 변환. () => {} -> function(){} 변환</p>\n</blockquote>\n<h4>Printing</h4>\n<p>결과를 출력합니다.</p>\n<h2>Polyfill</h2>\n<p>바벨은 ECMAScript2015+ 버전의 자바스크립트 코드를 하위 버전의 자바크립트로 transpile할 때 대칭적으로 transpile 할 수 있는 부분만 transpile합니다. const를 var로 바꾸는 것처럼 말이죠.</p>\n<p>단순히 transpile이 안되는 것 중 Promise가 대표적인데 이러한 것들은 바로 일련의 코드조각을 주입해서 이전 버전의 코드로 동작하도록 만들어주는 Polyfill이란 방법을 사용합니다.</p>\n<h2>설치 및 설정 파일 예시</h2>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">yarn add -D @babel/core @babel/cli @babel/preset-env\nyarn add core-js@3</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// babel.config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  plugins<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        id<span class=\"token operator\">:</span> <span class=\"token string\">\"11\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      useBuiltIns<span class=\"token operator\">:</span> <span class=\"token string\">\"usage\"</span><span class=\"token punctuation\">,</span>\n      corejs<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        version<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<blockquote>\n<p>@babel/core : 바벨 코어\n@babel/cli : 바벨 커맨드 라인 도구\n@babel/preset-env : 기본적인 플러그인들이 포함된 프리셋\ncore-js@3 : @babel/preset-env 프리셋 내부에서 사용할 폴리필을 위해 사용할 폴리필 라이브러리</p>\n</blockquote>\n<h2>Webpack에 통합</h2>\n<p>Webpack을 사용하는 경우 webpack의 loader에 babel-loader를 추가함으로써 Webpack의 빌드 과정 안에 babel을 통합시켜 사용합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">yarn add -D babel-loader @babel/core @babel/preset-env\nyarn add core-js@3</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// webpack.config.js</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n  mode<span class=\"token operator\">:</span> <span class=\"token string\">\"production\"</span><span class=\"token punctuation\">,</span>\n  entry<span class=\"token operator\">:</span> <span class=\"token string\">\"./src/index.js\"</span><span class=\"token punctuation\">,</span>\n  output<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    filename<span class=\"token operator\">:</span> <span class=\"token string\">\"main.js\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  module<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    rules<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n      <span class=\"token punctuation\">{</span>\n        test<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.m?js$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        exclude<span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n        use<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n          loader<span class=\"token operator\">:</span> <span class=\"token string\">\"babel-loader\"</span><span class=\"token punctuation\">,</span>\n          options<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n            presets<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n              <span class=\"token punctuation\">[</span>\n                <span class=\"token string\">\"@babel/preset-env\"</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">{</span>\n                  targets<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> ie<span class=\"token operator\">:</span> <span class=\"token string\">\"11\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                  useBuiltIns<span class=\"token operator\">:</span> <span class=\"token string\">\"usage\"</span><span class=\"token punctuation\">,</span>\n                  corejs<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n                    version<span class=\"token operator\">:</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\n                  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n                <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n              <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n            <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n          <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"Babel 정리","date":"May 08, 2021","description":"Parsing, Transforming, Printing 바벨의 기본 구조에 대해 알아봅시다."}},"previous":{"fields":{"slug":"/webpack/"},"frontmatter":{"title":"WEBPACK 정리"}},"next":{"fields":{"slug":"/event-delegation/"},"frontmatter":{"title":"DOM이벤트에서 이벤트 위임까지"}},"allMarkdownRemark":{"nodes":[{"excerpt":"XML과 HTML XML은 Extensible Markup Language의 약자로 다목적으로 사용되는 마크업 언어입니다. HTML, JSX등의 마크업 언어를 포함하는 것이 XML이라고 볼 수 있습니다. XML…","fields":{"slug":"/html5/"},"frontmatter":{"date":"May 27, 2021","title":"HTML5 정리","description":"HTML5를 CheatSheet 형태로 정리하였습니다."}},{"excerpt":"Primitive Type 자바스크립트에는 boolean, number, string, null, undefined 5 가지의 원시 타입(primitive type)이 있습니다. 원시 타입은 변수에 값 자체를 할당합니다. 따라서 const…","fields":{"slug":"/call-by-value/"},"frontmatter":{"date":"May 12, 2021","title":"자바스크립트의 함수 호출 방식은 Call by value 입니다.","description":"Primitive type, Object Type, Call by value, Call by reference를 이해하고 나아가 Shallow clone과 deep clone에 대해서도 알아봅시다."}},{"excerpt":"DOM 이벤트 각 DOM 요소들은 특정한 조건을 감지하였을 때, DOM 이벤트를 발생시킵니다. 그리고 이렇게 발생 된 DOM 이벤트를 제어하기 위해 이벤트 핸들러를 각 DOM 요소에 등록하여 사용합니다. 이벤트 흐름 표준 DOM 이벤트에서는…","fields":{"slug":"/event-delegation/"},"frontmatter":{"date":"May 10, 2021","title":"DOM이벤트에서 이벤트 위임까지","description":"DOM 이벤트의 이벤트 흐름에 대해 살펴보고 이벤트 위임을 알아봅시다."}},{"excerpt":"Babel이란? Babel은 ECMAScript 2015+(ES6+) 이상 버전의 Javascript 코드를 인터넷 익스플로러 같은 이전 버전의 Javascript 엔진에서 실행 가능한 이전 버전의 Javascript…","fields":{"slug":"/babel/"},"frontmatter":{"date":"May 08, 2021","title":"Babel 정리","description":"Parsing, Transforming, Printing 바벨의 기본 구조에 대해 알아봅시다."}},{"excerpt":"…","fields":{"slug":"/webpack/"},"frontmatter":{"date":"May 06, 2021","title":"WEBPACK 정리","description":"웹팩에 대한 내용들을 정리했습니다."}},{"excerpt":"자바스크립트 비동기를 위해 알아야하는 키워드 동기(sync) & 비동기(async) 1번, 2번, 3번이라고 부르는 세 가지 일이 있다고 하자 동기 - 1번 작업이 끝나면 2번 작업을 시작, 2번 작업이 끝나면 3번 작업이 시작 비동기 - 1번,…","fields":{"slug":"/자바스크립트-비동기/"},"frontmatter":{"date":"May 05, 2021","title":"자바스크립트의 비동기","description":"자바스크립트 비동기에 대해 알아봅시다."}},{"excerpt":"기존에 Tistory…","fields":{"slug":"/블로그를-시작하며/"},"frontmatter":{"date":"May 04, 2021","title":"블로그를 시작하며","description":"새롭게 블로그를 시작합니다 :)"}},{"excerpt":"This is my first post on my new fake blog! How exciting! I’m sure I’ll write a lot more interesting things in the future. Oh, and here’s a…","fields":{"slug":"/hello-world/"},"frontmatter":{"date":"May 01, 2015","title":"Hello World","description":"Hello World"}}]}},"pageContext":{"id":"38695025-1aa9-59a4-84c1-527f33db89ff","previousPostId":"ac1d27e8-2168-50be-a37e-cd8a89ea48d7","nextPostId":"105fc171-e8ac-521c-a4f8-d6227474c194"}},"staticQueryHashes":["2841359383","3257411868"]}